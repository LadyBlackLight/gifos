{"ast":null,"code":"var _jsxFileName = \"/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/components/Grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Grid(props) {\n  _s();\n\n  //API\n  const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\";\n  const limit = 12;\n  const urlSearch = \"https://api.giphy.com/v1/gifs/search\";\n  let [gifs, setGifs] = useState([]);\n  useEffect(() => {\n    let peticion = fetch(`${urlSearch}?api_key=${API_KEY}&q=hola&limit=${limit}`);\n    peticion.then(respuesta => {\n      return respuesta.json();\n    }).then(data => {\n      console.log(data.data);\n      setGifs(data.data);\n    });\n  }, []);\n\n  const renderGifs = () => {\n    gifs.map(gif => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gif-result\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gif.images.fixed_height.url,\n          alt: gif.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)\n      }, gif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados de la b\\xFAsqueda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resultados\",\n      children: renderGifs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Grid, \"9au+7fu3XfXLvCqEdMY71MFrLdM=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/components/Grid/Grid.jsx"],"names":["React","useState","useEffect","Grid","props","API_KEY","limit","urlSearch","gifs","setGifs","peticion","fetch","then","respuesta","json","data","console","log","renderGifs","map","gif","images","fixed_height","url","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC;AACA,QAAMC,OAAO,GAAG,kCAAhB;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,SAAS,GAAG,sCAAlB;AAEA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,QAAQ,GAAGC,KAAK,CACjB,GAAEJ,SAAU,YAAWF,OAAQ,iBAAgBC,KAAM,EADpC,CAApB;AAGAI,IAAAA,QAAQ,CACLE,IADH,CACSC,SAAD,IAAe;AACnB,aAAOA,SAAS,CAACC,IAAV,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAN,MAAAA,OAAO,CAACM,IAAI,CAACA,IAAN,CAAP;AACD,KAPH;AAQD,GAZM,EAYJ,EAZI,CAAT;;AAcE,QAAMG,UAAU,GAAE,MAAI;AACpBV,IAAAA,IAAI,CAACW,GAAL,CAAUC,GAAD,IAAO;AACd,0BACE;AAAkB,QAAA,SAAS,EAAC,YAA5B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEA,GAAG,CAACC,MAAJ,CAAWC,YAAX,CAAwBC,GAAlC;AAAuC,UAAA,GAAG,EAAEH,GAAG,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF,SAAUJ,GAAG,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KAND;AAOD,GARD;;AASF,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKP,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAvCuBf,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './grid.css';\n\nexport default function Grid(props) {\n    //API\n    const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\"\n    const limit = 12\n    const urlSearch = \"https://api.giphy.com/v1/gifs/search\"\n\n    let [gifs, setGifs] = useState([]);\n\n    useEffect(() => {\n        let peticion = fetch(\n          `${urlSearch}?api_key=${API_KEY}&q=hola&limit=${limit}`\n        );\n        peticion\n          .then((respuesta) => {\n            return respuesta.json();\n          })\n          .then((data) => {\n            console.log(data.data)\n            setGifs(data.data);\n          });\n      }, []);\n    \n      const renderGifs= ()=>{\n        gifs.map((gif)=>{\n          return(\n            <div key={gif.id} className=\"gif-result\">\n              <img src={gif.images.fixed_height.url} alt={gif.title}/>\n            </div>\n          )\n        })\n      }\n    return (\n        <div className=\"grid\">\n            <h2>Resultados de la b√∫squeda</h2>\n            <div className=\"resultados\">\n                {renderGifs()}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}