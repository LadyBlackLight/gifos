{"ast":null,"code":"var _jsxFileName = \"/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport listaGifs from './assets/data/data.js';\nimport Header from \"./components/Header/Header.jsx\";\nimport Hero from \"./components/Hero/Hero.jsx\";\nimport Grid from \"./components/Grid/Grid.jsx\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  //Dark Mode\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleClick = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }; //Búsqueda\n\n\n  const [input, setInput] = useState(\"\");\n  const [filter, setFilter] = useState(false);\n\n  const handleInput = event => {\n    setInput(event.target.value);\n    setFilter(false);\n  };\n\n  const handleButton = () => {\n    setFilter(!filter);\n\n    if (input === \"\" && setFilter(true)) {\n      setFilter(false);\n    } else {\n      setFilter(true);\n    }\n  };\n\n  const filterGif = listaGifs.filter(gif => {\n    if (filter === true && input !== \"\") {\n      return gif.id === input;\n    }\n\n    return gif;\n  });\n  let filteredGifs = filterGif;\n  const showGifs = filteredGifs.map(gif => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      id: gif.id,\n      src: gif.url,\n      alt: gif.id\n    }, gif.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleClick: handleClick,\n        theme: theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {\n        handleInput: handleInput,\n        input: input,\n        handleButton: handleButton,\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: showGifs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MAoy0lEaT7fvNCEsbRBViutMuag=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/App.js"],"names":["React","useState","listaGifs","Header","Hero","Grid","App","props","theme","setTheme","handleClick","input","setInput","filter","setFilter","handleInput","event","target","value","handleButton","filterGif","gif","id","filteredGifs","showGifs","map","url","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,OAAD,CAAlC;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;AACD,GAFD,CAJkB,CAOlB;;;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAGA,QAAMc,WAAW,GAAIC,KAAD,IAAW;AAC7BJ,IAAAA,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACAJ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMK,YAAY,GAAG,MAAM;AACzBL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;;AACA,QAAIF,KAAK,KAAK,EAAV,IAAgBG,SAAS,CAAC,IAAD,CAA7B,EAAqC;AACnCA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD,MAEO;AACLA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAPD;;AAQA,QAAMM,SAAS,GAAGlB,SAAS,CAACW,MAAV,CAAkBQ,GAAD,IAAS;AAC1C,QAAIR,MAAM,KAAK,IAAX,IAAmBF,KAAK,KAAK,EAAjC,EAAqC;AACnC,aAAOU,GAAG,CAACC,EAAJ,KAAWX,KAAlB;AACD;;AACD,WAAOU,GAAP;AACD,GALiB,CAAlB;AAOA,MAAIE,YAAY,GAAGH,SAAnB;AACA,QAAMI,QAAQ,GAAGD,YAAY,CAACE,GAAb,CAAkBJ,GAAD,IAAS;AACzC,wBACE,QAAC,IAAD;AAAoB,MAAA,EAAE,EAAEA,GAAG,CAACC,EAA5B;AAAgC,MAAA,GAAG,EAAED,GAAG,CAACK,GAAzC;AAA8C,MAAA,GAAG,EAAEL,GAAG,CAACC;AAAvD,OAAWD,GAAG,CAACM,GAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJgB,CAAjB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAG,GAAEnB,KAAM,EAAzB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAEE,WAArB;AAAkC,QAAA,KAAK,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,WAAW,EAAEO,WAAnB;AAAgC,QAAA,KAAK,EAAEJ,KAAvC;AAA8C,QAAA,YAAY,EAAEQ,YAA5D;AAA0E,QAAA,MAAM,EAAEN;AAAlF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGW;AADH;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnDQlB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport listaGifs from './assets/data/data.js'\nimport Header from \"./components/Header/Header.jsx\"\nimport Hero from \"./components/Hero/Hero.jsx\"\nimport Grid from \"./components/Grid/Grid.jsx\"\n\nimport './App.css'\n\nfunction App(props) {\n  //Dark Mode\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleClick = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }\n  //Búsqueda\n  const [input, setInput] = useState(\"\");\n  const [filter, setFilter] = useState(false);\n\n\n  const handleInput = (event) => {\n    setInput(event.target.value)\n    setFilter(false)\n  }\n\n  const handleButton = () => {\n    setFilter(!filter);\n    if (input === \"\" && setFilter(true)) {\n      setFilter(false)\n    } else {\n      setFilter(true)\n    }\n  }\n  const filterGif = listaGifs.filter((gif) => {\n    if (filter === true && input !== \"\") {\n      return gif.id === input\n    }\n    return gif\n  });\n\n  let filteredGifs = filterGif;\n  const showGifs = filteredGifs.map((gif) => {\n    return(\n      <Grid key={gif.key} id={gif.id} src={gif.url} alt={gif.id} />\n    )\n  })\n\n\n  return (\n    <div className={`${theme}`}>\n      <div className=\"container\">\n        <Header handleClick={handleClick} theme={theme} />\n        <Hero handleInput={handleInput} input={input} handleButton={handleButton} filter={filter} />\n      </div>\n      <div className=\"container\">\n        {showGifs}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}