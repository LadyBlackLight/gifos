{"ast":null,"code":"var _jsxFileName = \"/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Hero from \"./components/Hero/Hero.jsx\";\nimport Grid from \"./components/Grid/Grid.jsx\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  //DARK MODE\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleDark = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }; //API SEARCH\n\n\n  const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\";\n  const limit = 12;\n  const urlSearch = \"https://api.giphy.com/v1/gifs/search\"; //API AUTOCOMPLETE\n\n  const urlAutocomplete = \"https://api.giphy.com/v1/gifs/search/tags\";\n  let [gifs, setGifs] = useState([]);\n  let [isLoading, setIsLoading] = useState(false);\n  let [search, setSearch] = useState(\"\");\n  let [sugestions, setSugestions] = useState([]);\n  let [error, setError] = useState(false);\n  let [setReset] = useState(false); //MANEJAR API AUTOCOMPLETE\n\n  useEffect(() => {\n    let autocomplete = fetch(`${urlAutocomplete}?api_key=${API_KEY}&q=${search}`);\n    autocomplete.then(res => {\n      return res.json();\n    }).then(dato => {\n      console.log(\"Autocomplete\", dato.data);\n      setSugestions(dato.data);\n    });\n  }, [search]); //MANEJAR INPUT DE BÚSQUEDA\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  }; //MANEJAR BOTON DE BÚSQUEDA\n\n\n  const handleSubmit = () => {\n    setError(false);\n    setIsLoading(true);\n    let peticion = fetch(`${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`);\n    peticion.then(respuesta => {\n      return respuesta.json();\n    }).then(data => {\n      console.log(data.data);\n      setGifs(data.data);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(true);\n    });\n  }; //MENAJR RESET DE BÚSQUEDA\n\n\n  const handleReset = () => {\n    setGifs([]);\n    setSearch(\"\");\n  }; //MANEJAR BÚSQUEDA AL PRESIONAR ENTER\n\n\n  const handleKey = e => {\n    if (e.key === 'Enter') {\n      setError(false);\n      setIsLoading(true);\n      let peticion = fetch(`${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`);\n      peticion.then(respuesta => {\n        return respuesta.json();\n      }).then(data => {\n        console.log(data.data);\n        setGifs(data.data);\n        setIsLoading(false);\n\n        if (data.data === 0) {\n          setError(true);\n        }\n      }).catch(err => {\n        setError(true);\n      });\n    }\n  }; //MANEJAR SUGERENCIAS\n\n\n  const handleSugestions = e => {\n    setSearch(e.target.getAttribute(\"value\"));\n    setError(false);\n    setIsLoading(true);\n    setReset(true);\n    let peticion = fetch(`${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`);\n    peticion.then(respuesta => {\n      return respuesta.json();\n    }).then(data => {\n      console.log(data.data);\n      setGifs(data.data);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${theme}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleDark: handleDark,\n        theme: theme === \"light\" ? \"dark\" : \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {\n        handleSearchChange: handleSearchChange,\n        search: search,\n        handleSubmit: handleSubmit,\n        handleKey: handleKey,\n        sugestions: sugestions,\n        handleSugestions: handleSugestions,\n        tam: sugestions.length,\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        isLoading: isLoading,\n        gifs: gifs,\n        gifTam: gifs.length,\n        error: error,\n        search: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Yc6EgT/LKcGSE36MQJgGjU3I0U0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/App.js"],"names":["React","useState","useEffect","Header","Hero","Grid","App","props","theme","setTheme","handleDark","API_KEY","limit","urlSearch","urlAutocomplete","gifs","setGifs","isLoading","setIsLoading","search","setSearch","sugestions","setSugestions","error","setError","setReset","autocomplete","fetch","then","res","json","dato","console","log","data","handleSearchChange","e","target","value","handleSubmit","peticion","respuesta","catch","err","handleReset","handleKey","key","handleSugestions","getAttribute","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header.jsx\"\nimport Hero from \"./components/Hero/Hero.jsx\"\nimport Grid from \"./components/Grid/Grid.jsx\"\n\nimport './App.css'\n\nfunction App(props) {\n  //DARK MODE\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleDark = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }\n  //API SEARCH\n  const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\"\n  const limit = 12\n  const urlSearch = \"https://api.giphy.com/v1/gifs/search\"\n\n  //API AUTOCOMPLETE\n  const urlAutocomplete = \"https://api.giphy.com/v1/gifs/search/tags\"\n\n  let [gifs, setGifs] = useState([]);\n  let [isLoading, setIsLoading] = useState(false);\n  let [search, setSearch] = useState(\"\");\n  let [sugestions, setSugestions] = useState([]);\n  let [error, setError] = useState(false);\n  let [setReset] = useState(false);\n\n  //MANEJAR API AUTOCOMPLETE\n  useEffect(() => {\n    let autocomplete = fetch(`${urlAutocomplete}?api_key=${API_KEY}&q=${search}`);\n    autocomplete.then((res) => { return res.json() })\n      .then((dato) => {\n        console.log(\"Autocomplete\", dato.data);\n        setSugestions(dato.data);\n      })\n  }, [search]);\n\n  //MANEJAR INPUT DE BÚSQUEDA\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value)\n  }\n\n  //MANEJAR BOTON DE BÚSQUEDA\n  const handleSubmit = () => {\n    setError(false);\n    setIsLoading(true);\n    let peticion = fetch(\n      `${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`\n    );\n    peticion\n      .then((respuesta) => {\n        return respuesta.json();\n      })\n      .then((data) => {\n        console.log(data.data)\n        setGifs(data.data);\n        setIsLoading(false)\n      })\n      .catch((err)=>{\n        setError(true)\n      })\n  }\n\n  //MENAJR RESET DE BÚSQUEDA\n  const handleReset = ()=>{\n    setGifs([]);\n    setSearch(\"\");\n  }\n  //MANEJAR BÚSQUEDA AL PRESIONAR ENTER\n  const handleKey = (e) => {\n    if (e.key === 'Enter') {\n      setError(false);\n      setIsLoading(true);\n      let peticion = fetch(\n        `${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`\n      );\n      peticion\n        .then((respuesta) => {\n          return respuesta.json();\n        })\n        .then((data) => {\n          console.log(data.data)\n          setGifs(data.data);\n          setIsLoading(false)\n          if (data.data === 0) {\n            setError(true)\n          }\n        })\n        .catch((err)=>{\n          setError(true)\n        })\n    }\n  }\n\n  //MANEJAR SUGERENCIAS\n  const handleSugestions = (e) => {\n    setSearch(e.target.getAttribute(\"value\"));\n    setError(false);\n    setIsLoading(true);\n    setReset(true);\n      let peticion = fetch(\n        `${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`\n      );\n      peticion\n        .then((respuesta) => {\n          return respuesta.json();\n        })\n        .then((data) => {\n          console.log(data.data)\n          setGifs(data.data);\n          setIsLoading(false)\n        })\n        .catch((err)=>{\n          setError(true)\n        })\n  }\n  return (\n    <div className={`${theme}`}>\n      <div className=\"container\">\n        <Header handleDark={handleDark} theme={theme === \"light\" ? \"dark\" : \"light\"} />\n        <Hero handleSearchChange={handleSearchChange} \n        search={search} \n        handleSubmit={handleSubmit}\n        handleKey={handleKey} \n        sugestions={sugestions} \n        handleSugestions={handleSugestions} \n        tam={sugestions.length}\n        handleReset={handleReset} />\n        <Grid isLoading={isLoading} gifs={gifs} gifTam={gifs.length} error={error} search={search}  />\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}