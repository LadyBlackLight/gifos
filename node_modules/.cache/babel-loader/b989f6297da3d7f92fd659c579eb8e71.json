{"ast":null,"code":"var _jsxFileName = \"/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/components/Grid/Grid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './grid.css';\nimport Hero from \"./components/Hero/Hero.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Grid(props) {\n  _s();\n\n  //API\n  const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\";\n  const limit = 12;\n  const urlSearch = \"https://api.giphy.com/v1/gifs/search\";\n  let [gifs, setGifs] = useState([]);\n  let [isLoading, setIsLoading] = useState(false);\n  let [search, setSearch] = useState(\"\");\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    let peticion = fetch(`${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`);\n    peticion.then(respuesta => {\n      return respuesta.json();\n    }).then(data => {\n      console.log(data.data);\n      setGifs(data.data);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      handleSearchChange: handleSearchChange,\n      search: search,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultados de la b\\xFAsqueda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultados\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this) : gifs.map(gif => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gif-result\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gif.images.fixed_height.url,\n              alt: gif.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, gif.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Grid, \"sLG3SG5FJyYBWlmPB9lkZ0qmcc4=\");\n\n_c = Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/components/Grid/Grid.jsx"],"names":["React","useState","useEffect","Hero","Grid","props","API_KEY","limit","urlSearch","gifs","setGifs","isLoading","setIsLoading","search","setSearch","handleSearchChange","e","target","value","handleSubmit","preventDefault","peticion","fetch","then","respuesta","json","data","console","log","map","gif","images","fixed_height","url","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC;AACA,QAAMC,OAAO,GAAG,kCAAhB;AACA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,SAAS,GAAG,sCAAlB;AAEA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAI,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMc,kBAAkB,GAAIC,CAAD,IAAK;AAC9BF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAIH,CAAD,IAAK;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAED,GAHD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAIS,QAAQ,GAAGC,KAAK,CACf,GAAEd,SAAU,YAAWF,OAAQ,MAAKO,MAAO,UAASN,KAAM,EAD3C,CAApB;AAGAc,IAAAA,QAAQ,CACHE,IADL,CACWC,SAAD,IAAe;AACjB,aAAOA,SAAS,CAACC,IAAV,EAAP;AACH,KAHL,EAIKF,IAJL,CAIWG,IAAD,IAAU;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACAhB,MAAAA,OAAO,CAACgB,IAAI,CAACA,IAAN,CAAP;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KARL;AASH,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACI;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,kBAAkB,EAAEG,kBAA1B;AAA8C,MAAA,MAAM,EAAEF,MAAtD;AAA8D,MAAA,YAAY,EAAEM;AAA5E;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKR,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAwBF,IAAI,CAACoB,GAAL,CAAUC,GAAD,IAAS;AAChD,8BACI;AAAkB,YAAA,SAAS,EAAC,YAA5B;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,GAAG,CAACC,MAAJ,CAAWC,YAAX,CAAwBC,GAAlC;AAAuC,cAAA,GAAG,EAAEH,GAAG,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUJ,GAAG,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANiC;AADtC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAiBH;;GAnDuB/B,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './grid.css';\nimport Hero from \"./components/Hero/Hero.jsx\"\n\nexport default function Grid(props) {\n    //API\n    const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\"\n    const limit = 12\n    const urlSearch = \"https://api.giphy.com/v1/gifs/search\"\n\n    let [gifs, setGifs] = useState([]);\n    let [isLoading, setIsLoading] = useState(false);\n    let [search, setSearch] = useState(\"\");\n\n    const handleSearchChange = (e)=>{\n      setSearch(e.target.value)\n    }\n    const handleSubmit = (e)=>{\n      e.preventDefault();\n      \n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        let peticion = fetch(\n            `${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`\n        );\n        peticion\n            .then((respuesta) => {\n                return respuesta.json();\n            })\n            .then((data) => {\n                console.log(data.data)\n                setGifs(data.data);\n                setIsLoading(false)\n            })\n    }, []);\n\n    return (\n        <>\n        <Hero handleSearchChange={handleSearchChange} search={search} handleSubmit={handleSubmit}/>\n        <div className=\"grid\">\n            <h2>Resultados de la b√∫squeda</h2>\n            <div className=\"resultados\">\n                {isLoading ? <div>Loading</div> : gifs.map((gif) => {\n                    return (\n                        <div key={gif.id} className=\"gif-result\">\n                            <img src={gif.images.fixed_height.url} alt={gif.title} />\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}