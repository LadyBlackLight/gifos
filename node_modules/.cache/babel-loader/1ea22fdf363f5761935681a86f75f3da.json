{"ast":null,"code":"var _jsxFileName = \"/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header.jsx\";\nimport Hero from \"./components/Hero/Hero.jsx\";\nimport Grid from \"./components/Grid/Grid.jsx\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  //Dark Mode\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleDark = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }; //API SEARCH\n\n\n  const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\";\n  const limit = 12;\n  const urlSearch = \"https://api.giphy.com/v1/gifs/search\"; //API AUTOCOMPLETE\n\n  const urlAutocomplete = \"https://api.giphy.com/v1/gifs/search/tags\";\n  let [gifs, setGifs] = useState([]);\n  let [isLoading, setIsLoading] = useState(false);\n  let [search, setSearch] = useState(\"\");\n  let [sugestions, setSugestions] = useState([]);\n  useEffect(() => {\n    let autocomplete = fetch(`${urlAutocomplete}?api_key=${API_KEY}&q=${search}`);\n    autocomplete.then(res => {\n      return res.json();\n    }).then(dato => {\n      console.log(\"Autocomplete\", dato.data);\n      setSugestions(dato.data);\n    });\n  }, [search]);\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    setIsLoading(true);\n    let peticion = fetch(`${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`);\n    peticion.then(respuesta => {\n      return respuesta.json();\n    }).then(data => {\n      console.log(data.data);\n      setGifs(data.data);\n      setIsLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${theme}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleDark: handleDark,\n        theme: theme === \"light\" ? \"dark\" : \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {\n        handleSearchChange: handleSearchChange,\n        search: search,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sugerencias\",\n        children: sugestions.map(sugestion => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gif-sugestions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: sugestion.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, sugestion.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultados\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 24\n        }, this) : gifs.map(gif => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gif-result\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gif.images.fixed_height.url,\n              alt: gif.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, gif.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TiEDNNSoTeTiYdL6TPF4YRYZxps=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jessicacortes/Downloads/Acamica/Proyecto 3/gifos/src/App.js"],"names":["React","useState","useEffect","Header","Hero","Grid","App","props","theme","setTheme","handleDark","API_KEY","limit","urlSearch","urlAutocomplete","gifs","setGifs","isLoading","setIsLoading","search","setSearch","sugestions","setSugestions","autocomplete","fetch","then","res","json","dato","console","log","data","handleSearchChange","e","target","value","handleSubmit","peticion","respuesta","map","sugestion","name","id","gif","images","fixed_height","url","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header/Header.jsx\"\nimport Hero from \"./components/Hero/Hero.jsx\"\nimport Grid from \"./components/Grid/Grid.jsx\"\n\nimport './App.css'\n\nfunction App(props) {\n  //Dark Mode\n  const [theme, setTheme] = useState(\"light\");\n\n  const handleDark = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  }\n  //API SEARCH\n  const API_KEY = \"g4FgqpLBAv5phmEHXtcSt2FuIilGf156\"\n  const limit = 12\n  const urlSearch = \"https://api.giphy.com/v1/gifs/search\"\n\n  //API AUTOCOMPLETE\n  const urlAutocomplete = \"https://api.giphy.com/v1/gifs/search/tags\"\n\n  let [gifs, setGifs] = useState([]);\n  let [isLoading, setIsLoading] = useState(false);\n  let [search, setSearch] = useState(\"\");\n  let [sugestions, setSugestions] = useState([]);\n\n\n  useEffect(() => {\n    let autocomplete = fetch(`${urlAutocomplete}?api_key=${API_KEY}&q=${search}`);\n    autocomplete.then((res) => { return res.json() })\n      .then((dato) => {\n        console.log(\"Autocomplete\", dato.data);\n        setSugestions(dato.data);\n      })\n  }, [search]);\n\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value)\n  }\n  const handleSubmit = () => {\n    setIsLoading(true);\n    let peticion = fetch(\n      `${urlSearch}?api_key=${API_KEY}&q=${search}&limit=${limit}`\n    );\n    peticion\n      .then((respuesta) => {\n        return respuesta.json();\n      })\n      .then((data) => {\n        console.log(data.data)\n        setGifs(data.data);\n        setIsLoading(false)\n      })\n\n  }\n  return (\n    <div className={`${theme}`}>\n      <div className=\"container\">\n        <Header handleDark={handleDark} theme={theme === \"light\" ? \"dark\" : \"light\"} />\n        <Hero handleSearchChange={handleSearchChange} search={search} handleSubmit={handleSubmit} />\n        <div className=\"sugerencias\">\n          {sugestions.map((sugestion) => {\n            return (\n              <div key={sugestion.id} className=\"gif-sugestions\">\n                <button>{sugestion.name}</button>\n              </div>\n            )\n          })}\n        </div>\n        <Grid />\n        <div className=\"resultados\">\n          {isLoading ? <div>Loading</div> : gifs.map((gif) => {\n            return (\n              <div key={gif.id} className=\"gif-result\">\n                <img src={gif.images.fixed_height.url} alt={gif.title} />\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}